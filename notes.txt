URL of product details pages = response.url
breadcrumb(Category) = response.css("div.breadcrumb_wrap > ul > li.breadcrumbListItem:not(.back) > a::text").getall()
image and videos url = from product_url API (response["product"]["article"]["image"])
Category = response.css("div.articleNameHeader.css-t1z1wj > a > span::text").getall()
Product name = response.css("div.articleNameHeader.css-t1z1wj > h1::text").getall()
Available size = response.css("div.test-sizeSelector > ul button::text").getall()
Sense of fit = response.css("span.test-marker").get()
Coordinations = from product_url API (response["product"]["article"]["coordinates"])
Title of description = response.css("h4.itemFeature::text").getall()
General description of the product = from product_url API (response["product"]["article"]["description"]["messages"] -> mainText and subText - need to sanitize)
General description (itemization) = response.css("li.articleFeaturesItem").getall()
Size table = from size_chart_url API (1st item inside response["size_chart"] -> body and header)
special function & its description ( if any) = from product_url API (response["product"]["model"]["description"]["technology"])
Keywords = from product_url API (response["page"]["categories"] -> label from each dict)
Rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "#BVRRRatingOverall_ > div.BVRRRatingNormalOutOf > span.BVRRNumber.BVRRRatingNumber")
Number of Reviews = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRNumber.BVRRBuyAgainTotal")
Recommended rate = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRBuyAgainPercentage > span.BVRRNumber")
Sense of Fitting + its rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "div.BVRRSecondaryRatingsContainer div.BVRRRatingFit img")
Appropriation of length + its rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "div.BVRRSecondaryRatingsContainer div.BVRRRatingLength img")
Quality of material + its rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "div.BVRRSecondaryRatingsContainer div.BVRRRatingQuality img")
Comfort + its rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "div.BVRRSecondaryRatingsContainer div.BVRRRatingComfort img")
Review Date = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRReviewDate")
Review Rating = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "#BVRRRatingOverall_Review_Display > div.BVRRRatingNormalImage > img")
Review Title = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRReviewTitle")
Review Descriptions = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRReviewText")
Reviewer ID = from reviews_url API (get HTML from parsed JS object's "BVRRSourceID", then css selector "span.BVRRNickname")
